package bookTrade.test;

import static org.junit.Assert.*;

import org.junit.Test;

import controller.Controller;
import model.Admin;
import model.Book;
import model.BookDBMS;
import model.User;
import model.UserDBMS;
import view.View;

public class ControllerTest {
	
	Book book = new Book();
	BookDBMS bookList;
	Admin admin = new Admin();
	User user;
	UserDBMS userList;
	View view = new View(book, bookList, admin, user, userList);
	Controller controller = new Controller();
	
	@Test
	public void testFront() {
		controller.front();
		assertNull("front-userList 로드 실패",userList);
		assertNull("front-bookList 로드 실패",bookList);
	}

	@Test
	public void testJoin() {
		int adminbefore=userList.UserList.size();
		controller.join("admin", "1", "1", "1", "1");
		int adminafter=userList.UserList.size();
		assertEquals(adminbefore, adminafter);
		//admin으로 실행하면 userlist 안늘어남
		int userbefore=userList.UserList.size();
		controller.join("23", "1", "1", "1", "1");
		int userafter=userList.UserList.size()-1;
		assertEquals(userbefore, userafter);
		//user 넣으면 1증가
		
	}


	@Test
	public void testLogin() {
	
		controller.login("admin", "nayana");
		System.out.println(user.getId());
		assertEquals(user.getId(), "admin");
	}

	@Test
	public void testRegister() {
		int bookbbefore=bookList.bookList.size();
		controller.register("1","1","1", "1", "1", "1", "Good");
		int bookbefore=bookList.bookList.size()-1;
		assertEquals(bookbbefore, bookbbefore);
		//user 넣으면 1증가
	}

	@Test
	public void testBuy() {
		//buy잘 되는지, avail 바꾸는지
	}


	@Test
	public void testModify() {
		//avail에 따라 modify잘 되는지

	}

	@Test
	public void testDelete() {
		//avail에 따라 delete 잘 되는지
	}





	@Test
	public void testLogout() {
		//null잘됬나
	}



	@Test
	public void testDeleteUser() {
		//user delete
		//user's book delete
	}

	@Test
	public void testToggleUser() {
		//user deactivated
	}



}
